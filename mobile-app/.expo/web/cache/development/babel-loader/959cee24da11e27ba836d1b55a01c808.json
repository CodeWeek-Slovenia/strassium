{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\node_modules\\\\expo-image-crop\\\\example\\\\manipulator\\\\ImageManipulator.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as FileSystem from 'expo-file-system';\nimport PropTypes from 'prop-types';\nimport AutoHeightImage from 'react-native-auto-height-image';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport MaterialIcon from \"@expo/vector-icons/MaterialIcons\";\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport ImageCropOverlay from \"./ImageCropOverlay\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nYellowBox.ignoreWarnings(['componentWillReceiveProps', 'componentWillUpdate', 'componentWillMount']);\nYellowBox.ignoreWarnings(['Warning: componentWillMount is deprecated', 'Warning: componentWillReceiveProps is deprecated', 'Module RCTImageLoader requires']);\n\nvar ExpoImageManipulator = function (_Component) {\n  _inherits(ExpoImageManipulator, _Component);\n\n  var _super = _createSuper(ExpoImageManipulator);\n\n  function ExpoImageManipulator(props) {\n    var _this;\n\n    _classCallCheck(this, ExpoImageManipulator);\n\n    _this = _super.call(this, props);\n\n    _this.onGetCorrectSizes = function (w, h) {\n      var sizes = {\n        convertedWidth: w,\n        convertedheight: h\n      };\n      var ratio = Math.min(1920 / w, 1080 / h);\n      sizes.convertedWidth = Math.round(w * ratio);\n      sizes.convertedheight = Math.round(h * ratio);\n      return sizes;\n    };\n\n    _this.onToggleModal = function () {\n      var onToggleModal = _this.props.onToggleModal;\n      onToggleModal();\n\n      _this.setState({\n        cropMode: false\n      });\n    };\n\n    _this.onCropImage = function () {\n      _this.setState({\n        processing: true\n      });\n\n      var uri = _this.state.uri;\n      Image.getSize(uri, function _callee(actualWidth, actualHeight) {\n        var cropObj, uriToCrop, response, _await$_this$crop, uriCroped, base64, croppedWidth, croppedHeight;\n\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cropObj = _this.getCropBounds(actualWidth, actualHeight);\n\n                if (!(cropObj.height > 0 && cropObj.width > 0)) {\n                  _context.next = 20;\n                  break;\n                }\n\n                uriToCrop = uri;\n\n                if (!_this.isRemote) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(FileSystem.downloadAsync(uri, FileSystem.documentDirectory + 'image'));\n\n              case 6:\n                response = _context.sent;\n                uriToCrop = response.uri;\n\n              case 8:\n                _context.next = 10;\n                return _regeneratorRuntime.awrap(_this.crop(cropObj, uriToCrop));\n\n              case 10:\n                _await$_this$crop = _context.sent;\n                uriCroped = _await$_this$crop.uri;\n                base64 = _await$_this$crop.base64;\n                croppedWidth = _await$_this$crop.width;\n                croppedHeight = _await$_this$crop.height;\n                _this.actualSize.width = croppedWidth;\n                _this.actualSize.height = croppedHeight;\n\n                _this.setState({\n                  uri: uriCroped,\n                  base64: base64,\n                  cropMode: false,\n                  processing: false\n                });\n\n                _context.next = 21;\n                break;\n\n              case 20:\n                _this.setState({\n                  cropMode: false,\n                  processing: false\n                });\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    _this.onRotateImage = function _callee3() {\n      var uri, uriToCrop, response;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              uri = _this.state.uri;\n              uriToCrop = uri;\n\n              if (!_this.isRemote) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(FileSystem.downloadAsync(uri, FileSystem.documentDirectory + 'image'));\n\n            case 5:\n              response = _context3.sent;\n              uriToCrop = response.uri;\n\n            case 7:\n              Image.getSize(uri, function _callee2(width2, height2) {\n                var _await$_this$rotate, rotUri, base64;\n\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _regeneratorRuntime.awrap(_this.rotate(uriToCrop, width2, height2));\n\n                      case 2:\n                        _await$_this$rotate = _context2.sent;\n                        rotUri = _await$_this$rotate.uri;\n                        base64 = _await$_this$rotate.base64;\n\n                        _this.setState({\n                          uri: rotUri,\n                          base64: base64\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onFlipImage = function _callee5(orientation) {\n      var uri, uriToCrop, response;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              uri = _this.state.uri;\n              uriToCrop = uri;\n\n              if (!_this.isRemote) {\n                _context5.next = 7;\n                break;\n              }\n\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(FileSystem.downloadAsync(uri, FileSystem.documentDirectory + 'image'));\n\n            case 5:\n              response = _context5.sent;\n              uriToCrop = response.uri;\n\n            case 7:\n              Image.getSize(uri, function _callee4() {\n                var _await$_this$filp, rotUri, base64;\n\n                return _regeneratorRuntime.async(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return _regeneratorRuntime.awrap(_this.filp(uriToCrop, orientation));\n\n                      case 2:\n                        _await$_this$filp = _context4.sent;\n                        rotUri = _await$_this$filp.uri;\n                        base64 = _await$_this$filp.base64;\n\n                        _this.setState({\n                          uri: rotUri,\n                          base64: base64\n                        });\n\n                      case 6:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onHandleScroll = function (event) {\n      _this.scrollOffset = event.nativeEvent.contentOffset.y;\n    };\n\n    _this.getCropBounds = function (actualWidth, actualHeight) {\n      var imageRatio = actualHeight / actualWidth;\n      var originalHeight = Dimensions.get('window').height - 64;\n\n      if (isIphoneX()) {\n        originalHeight = Dimensions.get('window').height - 122;\n      }\n\n      var renderedImageWidth = imageRatio < originalHeight / width ? width : originalHeight / imageRatio;\n      var renderedImageHeight = imageRatio < originalHeight / width ? width * imageRatio : originalHeight;\n      var renderedImageY = (originalHeight - renderedImageHeight) / 2.0;\n      var renderedImageX = (width - renderedImageWidth) / 2.0;\n      var renderImageObj = {\n        left: renderedImageX,\n        top: renderedImageY,\n        width: renderedImageWidth,\n        height: renderedImageHeight\n      };\n      var cropOverlayObj = {\n        left: _this.currentPos.left,\n        top: _this.currentPos.top,\n        width: _this.currentSize.width,\n        height: _this.currentSize.height\n      };\n      var intersectAreaObj = {};\n      var x = Math.max(renderImageObj.left, cropOverlayObj.left);\n      var num1 = Math.min(renderImageObj.left + renderImageObj.width, cropOverlayObj.left + cropOverlayObj.width);\n      var y = Math.max(renderImageObj.top, cropOverlayObj.top);\n      var num2 = Math.min(renderImageObj.top + renderImageObj.height, cropOverlayObj.top + cropOverlayObj.height);\n\n      if (num1 >= x && num2 >= y) {\n        intersectAreaObj = {\n          originX: (x - renderedImageX) * (actualWidth / renderedImageWidth),\n          originY: (y - renderedImageY) * (actualWidth / renderedImageWidth),\n          width: (num1 - x) * (actualWidth / renderedImageWidth),\n          height: (num2 - y) * (actualWidth / renderedImageWidth)\n        };\n      } else {\n        intersectAreaObj = {\n          originX: x - renderedImageX,\n          originY: y - renderedImageY,\n          width: 0,\n          height: 0\n        };\n      }\n\n      return intersectAreaObj;\n    };\n\n    _this.filp = function _callee6(uri, orientation) {\n      var saveOptions, manipResult;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              saveOptions = _this.props.saveOptions;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(uri, [{\n                flip: orientation === 'vertical' ? ImageManipulator.FlipType.Vertical : ImageManipulator.FlipType.Horizontal\n              }], saveOptions));\n\n            case 3:\n              manipResult = _context6.sent;\n              return _context6.abrupt(\"return\", manipResult);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.rotate = function _callee7(uri, width2) {\n      var saveOptions, manipResult;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              saveOptions = _this.props.saveOptions;\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(uri, [{\n                rotate: -90\n              }, {\n                resize: {\n                  width: _this.trueWidth || width2\n                }\n              }], saveOptions));\n\n            case 3:\n              manipResult = _context7.sent;\n              return _context7.abrupt(\"return\", manipResult);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.crop = function _callee8(cropObj, uri) {\n      var saveOptions, manipResult;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              saveOptions = _this.props.saveOptions;\n\n              if (!(cropObj.height > 0 && cropObj.width > 0)) {\n                _context8.next = 6;\n                break;\n              }\n\n              _context8.next = 4;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(uri, [{\n                crop: cropObj\n              }], saveOptions));\n\n            case 4:\n              manipResult = _context8.sent;\n              return _context8.abrupt(\"return\", manipResult);\n\n            case 6:\n              return _context8.abrupt(\"return\", {\n                uri: null,\n                base64: null\n              });\n\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      cropMode: false,\n      processing: false,\n      zoomScale: 1\n    };\n    _this.scrollOffset = 0;\n    _this.currentPos = {\n      left: 0,\n      top: 0\n    };\n    _this.currentSize = {\n      width: 0,\n      height: 0\n    };\n    _this.maxSizes = {\n      width: 0,\n      height: 0\n    };\n    _this.actualSize = {\n      width: 0,\n      height: 0\n    };\n    return _this;\n  }\n\n  _createClass(ExpoImageManipulator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(this.onConvertImageToEditableSize());\n\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"onConvertImageToEditableSize\",\n    value: function onConvertImageToEditableSize() {\n      var _this2 = this;\n\n      var rawUri;\n      return _regeneratorRuntime.async(function onConvertImageToEditableSize$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              rawUri = this.props.photo.uri;\n              Image.getSize(rawUri, function _callee9(imgW, imgH) {\n                var _this2$onGetCorrectSi, convertedWidth, convertedheight, _await$ImageManipulat, uri, w, height;\n\n                return _regeneratorRuntime.async(function _callee9$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _this2$onGetCorrectSi = _this2.onGetCorrectSizes(imgW, imgH), convertedWidth = _this2$onGetCorrectSi.convertedWidth, convertedheight = _this2$onGetCorrectSi.convertedheight;\n                        _context10.next = 3;\n                        return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(rawUri, [{\n                          resize: {\n                            width: convertedWidth,\n                            height: convertedheight\n                          }\n                        }]));\n\n                      case 3:\n                        _await$ImageManipulat = _context10.sent;\n                        uri = _await$ImageManipulat.uri;\n                        w = _await$ImageManipulat.width;\n                        height = _await$ImageManipulat.height;\n\n                        _this2.setState({\n                          uri: uri\n                        });\n\n                        _this2.actualSize.width = w;\n                        _this2.actualSize.height = height;\n\n                      case 10:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 2:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"isRemote\",\n    get: function get() {\n      var uri = this.state.uri;\n      return /^(http|https|ftp)?(?:[:/]*)([a-z0-9.-]*)(?::([0-9]+))?(\\/[^?#]*)?(?:\\?([^#]*))?(?:#(.*))?$/.test(uri);\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps() {\n      return _regeneratorRuntime.async(function UNSAFE_componentWillReceiveProps$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return _regeneratorRuntime.awrap(this.onConvertImageToEditableSize());\n\n            case 2:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"zoomImage\",\n    value: function zoomImage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          isVisible = _this$props.isVisible,\n          onPictureChoosed = _this$props.onPictureChoosed,\n          borderColor = _this$props.borderColor,\n          _this$props$allowRota = _this$props.allowRotate,\n          allowRotate = _this$props$allowRota === void 0 ? true : _this$props$allowRota,\n          _this$props$allowFlip = _this$props.allowFlip,\n          allowFlip = _this$props$allowFlip === void 0 ? true : _this$props$allowFlip,\n          btnTexts = _this$props.btnTexts,\n          fixedMask = _this$props.fixedMask;\n      var _this$state = this.state,\n          uri = _this$state.uri,\n          base64 = _this$state.base64,\n          cropMode = _this$state.cropMode,\n          processing = _this$state.processing;\n      var imageRatio = this.actualSize.height / this.actualSize.width;\n      var originalHeight = Dimensions.get('window').height - 64;\n\n      if (isIphoneX()) {\n        originalHeight = Dimensions.get('window').height - 122;\n      }\n\n      var cropRatio = originalHeight / width;\n      var cropWidth = imageRatio < cropRatio ? width : originalHeight / imageRatio;\n      var cropHeight = imageRatio < cropRatio ? width * imageRatio : originalHeight;\n      var cropInitialTop = (originalHeight - cropHeight) / 2.0;\n      var cropInitialLeft = (width - cropWidth) / 2.0;\n\n      if (this.currentSize.width === 0 && cropMode) {\n        this.currentSize.width = cropWidth;\n        this.currentSize.height = cropHeight;\n        this.currentPos.top = cropInitialTop;\n        this.currentPos.left = cropInitialLeft;\n      }\n\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: isVisible,\n        hardwareAccelerated: true,\n        onRequestClose: function onRequestClose() {\n          _this3.onToggleModal();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          width: width,\n          flexDirection: 'row',\n          backgroundColor: 'black',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        scrollEnabled: false,\n        horizontal: true,\n        contentContainerStyle: {\n          width: '100%',\n          paddingHorizontal: 15,\n          height: 44,\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }\n      }, !cropMode ? React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onToggleModal();\n        },\n        style: {\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 37\n        }\n      }, React.createElement(Icon, {\n        size: 24,\n        name: \"arrow-left\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 41\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 37\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.setState({\n            cropMode: true\n          });\n        },\n        style: {\n          marginLeft: 10,\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 41\n        }\n      }, React.createElement(Icon, {\n        size: 20,\n        name: \"crop\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 45\n        }\n      })), allowRotate && React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 49\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onRotateImage();\n        },\n        style: {\n          marginLeft: 10,\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 53\n        }\n      }, React.createElement(Icon, {\n        size: 20,\n        name: \"rotate-left\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 57\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onFlipImage('vertical');\n        },\n        style: {\n          marginLeft: 10,\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 53\n        }\n      }, React.createElement(MaterialIcon, {\n        style: {\n          transform: [{\n            rotate: '270deg'\n          }]\n        },\n        size: 20,\n        name: \"flip\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 57\n        }\n      }))), allowFlip && React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 49\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onFlipImage('horizontal');\n        },\n        style: {\n          marginLeft: 10,\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 53\n        }\n      }, React.createElement(MaterialIcon, {\n        size: 20,\n        name: \"flip\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 57\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          onPictureChoosed({\n            uri: uri,\n            base64: base64\n          });\n\n          _this3.onToggleModal();\n        },\n        style: {\n          marginLeft: 10,\n          width: 60,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 53\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: '500',\n          color: 'white',\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 57\n        }\n      }, btnTexts.done))))) : React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.setState({\n            cropMode: false\n          });\n        },\n        style: {\n          width: 32,\n          height: 32,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 37\n        }\n      }, React.createElement(Icon, {\n        size: 24,\n        name: \"arrow-left\",\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 41\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3.onCropImage();\n        },\n        style: {\n          marginRight: 10,\n          alignItems: 'flex-end',\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 37\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 41\n        }\n      }, React.createElement(MaterialIcon, {\n        style: {\n          flexDirection: 'row',\n          marginRight: 10\n        },\n        size: 24,\n        name: !processing ? 'done' : 'access-time',\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 45\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: '500',\n          color: 'white',\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 45\n        }\n      }, !processing ? btnTexts.crop : btnTexts.processing)))))), React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'black',\n          width: Dimensions.get('window').width\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          position: 'relative',\n          flex: 1\n        },\n        contentContainerStyle: {\n          backgroundColor: 'black'\n        },\n        maximumZoomScale: 5,\n        minimumZoomScale: 0.5,\n        onScroll: this.onHandleScroll,\n        bounces: false,\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        ref: function ref(c) {\n          _this3.scrollView = c;\n        },\n        scrollEventThrottle: 16,\n        scrollEnabled: false,\n        pinchGestureEnabled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }\n      }, React.createElement(AutoHeightImage, {\n        style: {\n          backgroundColor: 'black'\n        },\n        source: {\n          uri: uri\n        },\n        resizeMode: imageRatio >= 1 ? 'contain' : 'contain',\n        width: width,\n        height: originalHeight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }\n      }), !!cropMode && React.createElement(ImageCropOverlay, {\n        onLayoutChanged: function onLayoutChanged(top, left, w, height) {\n          _this3.currentSize.width = w;\n          _this3.currentSize.height = height;\n          _this3.currentPos.top = top;\n          _this3.currentPos.left = left;\n        },\n        initialWidth: fixedMask && fixedMask.width || cropWidth,\n        initialHeight: fixedMask && fixedMask.height || cropHeight,\n        initialTop: cropInitialTop,\n        initialLeft: cropInitialLeft,\n        minHeight: fixedMask && fixedMask.height || 100,\n        minWidth: fixedMask && fixedMask.width || 100,\n        borderColor: borderColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 29\n        }\n      }))));\n    }\n  }]);\n\n  return ExpoImageManipulator;\n}(Component);\n\nexport default ExpoImageManipulator;\nExpoImageManipulator.defaultProps = {\n  onPictureChoosed: function onPictureChoosed(_ref) {\n    var uri = _ref.uri,\n        base64 = _ref.base64;\n    return console.log('URI:', uri, base64);\n  },\n  borderColor: '#a4a4a4',\n  btnTexts: {\n    crop: 'Crop',\n    rotate: 'Rotate',\n    done: 'Done',\n    processing: 'Processing'\n  },\n  saveOptions: {\n    compress: 1,\n    format: ImageManipulator.SaveFormat.PNG,\n    base64: false\n  },\n  fixedMask: null\n};\nExpoImageManipulator.propTypes = {\n  borderColor: PropTypes.string,\n  isVisible: PropTypes.bool.isRequired,\n  onPictureChoosed: PropTypes.func,\n  btnTexts: PropTypes.object,\n  fixedMask: PropTypes.object,\n  saveOptions: PropTypes.object,\n  photo: PropTypes.object.isRequired,\n  onToggleModal: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/node_modules/expo-image-crop/example/manipulator/ImageManipulator.js"],"names":["React","Component","ImageManipulator","FileSystem","PropTypes","AutoHeightImage","Icon","MaterialIcon","isIphoneX","ImageCropOverlay","Dimensions","get","width","YellowBox","ignoreWarnings","ExpoImageManipulator","props","onGetCorrectSizes","w","h","sizes","convertedWidth","convertedheight","ratio","Math","min","round","onToggleModal","setState","cropMode","onCropImage","processing","uri","state","Image","getSize","actualWidth","actualHeight","cropObj","getCropBounds","height","uriToCrop","isRemote","downloadAsync","documentDirectory","response","crop","uriCroped","base64","croppedWidth","croppedHeight","actualSize","onRotateImage","width2","height2","rotate","rotUri","onFlipImage","orientation","filp","onHandleScroll","event","scrollOffset","nativeEvent","contentOffset","y","imageRatio","originalHeight","renderedImageWidth","renderedImageHeight","renderedImageY","renderedImageX","renderImageObj","left","top","cropOverlayObj","currentPos","currentSize","intersectAreaObj","x","max","num1","num2","originX","originY","saveOptions","manipulateAsync","flip","FlipType","Vertical","Horizontal","manipResult","resize","trueWidth","zoomScale","maxSizes","onConvertImageToEditableSize","rawUri","photo","imgW","imgH","test","isVisible","onPictureChoosed","borderColor","allowRotate","allowFlip","btnTexts","fixedMask","cropRatio","cropWidth","cropHeight","cropInitialTop","cropInitialLeft","flexDirection","backgroundColor","justifyContent","paddingHorizontal","alignItems","flex","marginLeft","transform","fontWeight","color","fontSize","done","marginRight","position","c","scrollView","defaultProps","console","log","compress","format","SaveFormat","PNG","propTypes","string","bool","isRequired","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Dimensions,\n    Image,\n    ScrollView,\n    Modal,\n    View,\n    Text,\n    SafeAreaView,\n    TouchableOpacity,\n    YellowBox,\n} from 'react-native'\nimport * as ImageManipulator from 'expo-image-manipulator'\nimport * as FileSystem from 'expo-file-system'\nimport PropTypes from 'prop-types'\nimport AutoHeightImage from 'react-native-auto-height-image'\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons'\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons'\nimport { isIphoneX } from 'react-native-iphone-x-helper'\nimport ImageCropOverlay from './ImageCropOverlay'\n\nconst { width } = Dimensions.get('window')\n\nYellowBox.ignoreWarnings(['componentWillReceiveProps', 'componentWillUpdate', 'componentWillMount'])\nYellowBox.ignoreWarnings([\n    'Warning: componentWillMount is deprecated',\n    'Warning: componentWillReceiveProps is deprecated',\n    'Module RCTImageLoader requires',\n])\n\nclass ExpoImageManipulator extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            cropMode: false,\n            processing: false,\n            zoomScale: 1,\n        }\n\n        this.scrollOffset = 0\n\n        this.currentPos = {\n            left: 0,\n            top: 0,\n        }\n\n        this.currentSize = {\n            width: 0,\n            height: 0,\n        }\n\n        this.maxSizes = {\n            width: 0,\n            height: 0,\n        }\n\n        this.actualSize = {\n            width: 0,\n            height: 0,\n        }\n    }\n\n    async componentDidMount() {\n        await this.onConvertImageToEditableSize()\n    }\n\n    onGetCorrectSizes = (w, h) => {\n        const sizes = {\n            convertedWidth: w,\n            convertedheight: h,\n        }\n        const ratio = Math.min(1920 / w, 1080 / h)\n        sizes.convertedWidth = Math.round(w * ratio)\n        sizes.convertedheight = Math.round(h * ratio)\n        return sizes\n    }\n\n    async onConvertImageToEditableSize() {\n        const { photo: { uri: rawUri } } = this.props\n        Image.getSize(rawUri, async (imgW, imgH) => {\n            const { convertedWidth, convertedheight } = this.onGetCorrectSizes(imgW, imgH)\n            const { uri, width: w, height } = await ImageManipulator.manipulateAsync(rawUri,\n                [\n                    {\n                        resize: {\n                            width: convertedWidth,\n                            height: convertedheight,\n                        },\n                    },\n                ])\n            this.setState({\n                uri,\n            })\n            this.actualSize.width = w\n            this.actualSize.height = height\n        })\n    }\n\n    get isRemote() {\n        const { uri } = this.state\n        return /^(http|https|ftp)?(?:[:/]*)([a-z0-9.-]*)(?::([0-9]+))?(\\/[^?#]*)?(?:\\?([^#]*))?(?:#(.*))?$/.test(uri)\n    }\n\n    onToggleModal = () => {\n        const { onToggleModal } = this.props\n        onToggleModal()\n        this.setState({ cropMode: false })\n    }\n\n    onCropImage = () => {\n        this.setState({ processing: true })\n        const { uri } = this.state\n        Image.getSize(uri, async (actualWidth, actualHeight) => {\n            const cropObj = this.getCropBounds(actualWidth, actualHeight)\n            if (cropObj.height > 0 && cropObj.width > 0) {\n                let uriToCrop = uri\n                if (this.isRemote) {\n                    const response = await FileSystem.downloadAsync(\n                        uri,\n                        FileSystem.documentDirectory + 'image',\n                    )\n                    uriToCrop = response.uri\n                }\n                const {\n                    uri: uriCroped, base64, width: croppedWidth, height: croppedHeight,\n                } = await this.crop(cropObj, uriToCrop)\n\n                this.actualSize.width = croppedWidth\n                this.actualSize.height = croppedHeight\n\n                this.setState({\n                    uri: uriCroped, base64, cropMode: false, processing: false,\n                })\n            } else {\n                this.setState({ cropMode: false, processing: false })\n            }\n        })\n    }\n\n    onRotateImage = async () => {\n        const { uri } = this.state\n        let uriToCrop = uri\n        if (this.isRemote) {\n            const response = await FileSystem.downloadAsync(\n                uri,\n                FileSystem.documentDirectory + 'image',\n            )\n            uriToCrop = response.uri\n        }\n        Image.getSize(uri, async (width2, height2) => {\n            const { uri: rotUri, base64 } = await this.rotate(uriToCrop, width2, height2)\n            this.setState({ uri: rotUri, base64 })\n        })\n    }\n\n    onFlipImage = async (orientation) => {\n        const { uri } = this.state\n        let uriToCrop = uri\n        if (this.isRemote) {\n            const response = await FileSystem.downloadAsync(\n                uri,\n                FileSystem.documentDirectory + 'image',\n            )\n            uriToCrop = response.uri\n        }\n        Image.getSize(uri, async () => {\n            const { uri: rotUri, base64 } = await this.filp(uriToCrop, orientation)\n            this.setState({ uri: rotUri, base64 })\n        })\n    }\n\n    onHandleScroll = (event) => {\n        this.scrollOffset = event.nativeEvent.contentOffset.y\n    }\n\n    getCropBounds = (actualWidth, actualHeight) => {\n        const imageRatio = actualHeight / actualWidth\n        let originalHeight = Dimensions.get('window').height - 64\n        if (isIphoneX()) {\n            originalHeight = Dimensions.get('window').height - 122\n        }\n        const renderedImageWidth = imageRatio < (originalHeight / width) ? width : originalHeight / imageRatio\n        const renderedImageHeight = imageRatio < (originalHeight / width) ? width * imageRatio : originalHeight\n\n        const renderedImageY = (originalHeight - renderedImageHeight) / 2.0\n        const renderedImageX = (width - renderedImageWidth) / 2.0\n\n        const renderImageObj = {\n            left: renderedImageX,\n            top: renderedImageY,\n            width: renderedImageWidth,\n            height: renderedImageHeight,\n        }\n        const cropOverlayObj = {\n            left: this.currentPos.left,\n            top: this.currentPos.top,\n            width: this.currentSize.width,\n            height: this.currentSize.height,\n        }\n\n        let intersectAreaObj = {}\n\n        const x = Math.max(renderImageObj.left, cropOverlayObj.left)\n        const num1 = Math.min(renderImageObj.left + renderImageObj.width, cropOverlayObj.left + cropOverlayObj.width)\n        const y = Math.max(renderImageObj.top, cropOverlayObj.top)\n        const num2 = Math.min(renderImageObj.top + renderImageObj.height, cropOverlayObj.top + cropOverlayObj.height)\n        if (num1 >= x && num2 >= y) {\n            intersectAreaObj = {\n                originX: (x - renderedImageX) * (actualWidth / renderedImageWidth),\n                originY: (y - renderedImageY) * (actualWidth / renderedImageWidth),\n                width: (num1 - x) * (actualWidth / renderedImageWidth),\n                height: (num2 - y) * (actualWidth / renderedImageWidth),\n            }\n        } else {\n            intersectAreaObj = {\n                originX: x - renderedImageX,\n                originY: y - renderedImageY,\n                width: 0,\n                height: 0,\n            }\n        }\n        return intersectAreaObj\n    }\n\n    filp = async (uri, orientation) => {\n        const { saveOptions } = this.props\n        const manipResult = await ImageManipulator.manipulateAsync(uri, [{\n            flip: orientation === 'vertical' ? ImageManipulator.FlipType.Vertical : ImageManipulator.FlipType.Horizontal,\n        }],\n        saveOptions)\n        return manipResult\n    };\n\n    rotate = async (uri, width2) => {\n        const { saveOptions } = this.props\n        const manipResult = await ImageManipulator.manipulateAsync(uri, [{\n            rotate: -90,\n        }, {\n            resize: {\n                width: this.trueWidth || width2,\n                // height: this.trueHeight || height2,\n            },\n        }], saveOptions)\n        return manipResult\n    }\n\n    crop = async (cropObj, uri) => {\n        const { saveOptions } = this.props\n        if (cropObj.height > 0 && cropObj.width > 0) {\n            const manipResult = await ImageManipulator.manipulateAsync(\n                uri,\n                [{\n                    crop: cropObj,\n                }],\n                saveOptions,\n            )\n            return manipResult\n        }\n        return {\n            uri: null,\n            base64: null,\n        }\n    };\n\n    // calculateMaxSizes = (event) => {\n    //     const { fixedSquareAspect } = this.state\n    //     let w1 = event.nativeEvent.layout.width || 100\n    //     let h1 = event.nativeEvent.layout.height || 100\n    //     if (fixedSquareAspect) {\n    //         if (w1 < h1) h1 = w1\n    //         else w1 = h1\n    //     }\n    //     this.maxSizes.width = w1\n    //     this.maxSizes.height = h1\n    // };\n\n    // eslint-disable-next-line camelcase\n    async UNSAFE_componentWillReceiveProps() {\n        await this.onConvertImageToEditableSize()\n    }\n\n    zoomImage() {\n        // this.refs.imageScrollView.zoomScale = 5\n        // this.setState({width: width})\n        // this.setState({zoomScale: 5})\n\n        // this.setState(curHeight)\n    }\n\n    render() {\n        const {\n            isVisible,\n            onPictureChoosed,\n            borderColor,\n            allowRotate = true,\n            allowFlip = true,\n            btnTexts,\n            fixedMask,\n        } = this.props\n        const {\n            uri,\n            base64,\n            cropMode,\n            processing,\n        } = this.state\n\n        const imageRatio = this.actualSize.height / this.actualSize.width\n        let originalHeight = Dimensions.get('window').height - 64\n        if (isIphoneX()) {\n            originalHeight = Dimensions.get('window').height - 122\n        }\n\n        const cropRatio = originalHeight / width\n\n        const cropWidth = imageRatio < cropRatio ? width : originalHeight / imageRatio\n        const cropHeight = imageRatio < cropRatio ? width * imageRatio : originalHeight\n\n        const cropInitialTop = (originalHeight - cropHeight) / 2.0\n        const cropInitialLeft = (width - cropWidth) / 2.0\n\n\n        if (this.currentSize.width === 0 && cropMode) {\n            this.currentSize.width = cropWidth\n            this.currentSize.height = cropHeight\n\n            this.currentPos.top = cropInitialTop\n            this.currentPos.left = cropInitialLeft\n        }\n        return (\n            <Modal\n                animationType=\"slide\"\n                transparent\n                visible={isVisible}\n                hardwareAccelerated\n                onRequestClose={() => {\n                    this.onToggleModal()\n                }}\n            >\n                <SafeAreaView\n                    style={{\n                        width, flexDirection: 'row', backgroundColor: 'black', justifyContent: 'space-between',\n                    }}\n                >\n                    <ScrollView scrollEnabled={false}\n                        horizontal\n                        contentContainerStyle={{\n                            width: '100%', paddingHorizontal: 15, height: 44, alignItems: 'center',\n                        }}\n                    >\n                        {!cropMode\n                            ? (\n                                <View style={{ flexDirection: 'row' }}>\n                                    <TouchableOpacity onPress={() => this.onToggleModal()}\n                                        style={{\n                                            width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Icon size={24} name=\"arrow-left\" color=\"white\" />\n                                    </TouchableOpacity>\n                                    <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'flex-end' }}>\n                                        <TouchableOpacity onPress={() => this.setState({ cropMode: true })}\n                                            style={{\n                                                marginLeft: 10, width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Icon size={20} name=\"crop\" color=\"white\" />\n                                        </TouchableOpacity>\n                                        {\n                                            allowRotate\n                                            && (\n                                                <View style={{ flexDirection: 'row' }}>\n\n                                                    <TouchableOpacity onPress={() => this.onRotateImage()}\n                                                        style={{\n                                                            marginLeft: 10, width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                                        }}\n                                                    >\n                                                        <Icon size={20} name=\"rotate-left\" color=\"white\" />\n                                                    </TouchableOpacity>\n                                                    <TouchableOpacity onPress={() => this.onFlipImage('vertical')}\n                                                        style={{\n                                                            marginLeft: 10, width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                                        }}\n                                                    >\n                                                        <MaterialIcon style={{ transform: [{ rotate: '270deg' }] }} size={20} name=\"flip\" color=\"white\" />\n                                                    </TouchableOpacity>\n                                                </View>\n                                            )\n                                        }\n                                        {\n                                            allowFlip\n                                            && (\n                                                <View style={{ flexDirection: 'row' }}>\n\n                                                    <TouchableOpacity onPress={() => this.onFlipImage('horizontal')}\n                                                        style={{\n                                                            marginLeft: 10, width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                                        }}\n                                                    >\n                                                        <MaterialIcon size={20} name=\"flip\" color=\"white\" />\n                                                    </TouchableOpacity>\n                                                    <TouchableOpacity onPress={() => { onPictureChoosed({ uri, base64 }); this.onToggleModal() }}\n                                                        style={{\n                                                            marginLeft: 10, width: 60, height: 32, alignItems: 'center', justifyContent: 'center',\n                                                        }}\n                                                    >\n                                                        <Text style={{ fontWeight: '500', color: 'white', fontSize: 18 }}>{btnTexts.done}</Text>\n                                                    </TouchableOpacity>\n                                                </View>\n                                            )\n                                        }\n                                    </View>\n                                </View>\n                            )\n                            : (\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                                    <TouchableOpacity onPress={() => this.setState({ cropMode: false })}\n                                        style={{\n                                            width: 32, height: 32, alignItems: 'center', justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Icon size={24} name=\"arrow-left\" color=\"white\" />\n                                    </TouchableOpacity>\n                                    <TouchableOpacity onPress={() => this.onCropImage()}\n                                        style={{\n                                            marginRight: 10, alignItems: 'flex-end', flex: 1,\n                                        }}\n                                    >\n                                        <View style={{ flexDirection: 'row' }}>\n                                            <MaterialIcon style={{ flexDirection: 'row', marginRight: 10 }} size={24} name={!processing ? 'done' : 'access-time'} color=\"white\" />\n                                            <Text style={{ fontWeight: '500', color: 'white', fontSize: 18 }}>{!processing ? btnTexts.crop : btnTexts.processing}</Text>\n                                        </View>\n                                    </TouchableOpacity>\n                                </View>\n                            )\n                        }\n                    </ScrollView>\n                </SafeAreaView>\n                <View style={{ flex: 1, backgroundColor: 'black', width: Dimensions.get('window').width }}>\n                    <ScrollView\n                        style={{ position: 'relative', flex: 1 }}\n                        contentContainerStyle={{ backgroundColor: 'black' }}\n                        maximumZoomScale={5}\n                        minimumZoomScale={0.5}\n                        onScroll={this.onHandleScroll}\n                        bounces={false}\n                        showsHorizontalScrollIndicator={false}\n                        showsVerticalScrollIndicator={false}\n                        ref={(c) => { this.scrollView = c }}\n                        scrollEventThrottle={16}\n                        scrollEnabled={false}\n                        pinchGestureEnabled={false}\n                        // scrollEnabled={cropMode ? false : true}\n                        // pinchGestureEnabled={cropMode ? false : pinchGestureEnabled}\n                    >\n                        <AutoHeightImage\n                            style={{ backgroundColor: 'black' }}\n                            source={{ uri }}\n                            resizeMode={imageRatio >= 1 ? 'contain' : 'contain'}\n                            width={width}\n                            height={originalHeight}\n                            // onLayout={this.calculateMaxSizes}\n                        />\n                        {!!cropMode && (\n                            <ImageCropOverlay\n                                onLayoutChanged={(top, left, w, height) => {\n                                    this.currentSize.width = w\n                                    this.currentSize.height = height\n                                    this.currentPos.top = top\n                                    this.currentPos.left = left\n                                }}\n                                initialWidth={(fixedMask && fixedMask.width) || cropWidth}\n                                initialHeight={(fixedMask && fixedMask.height) || cropHeight}\n                                initialTop={cropInitialTop}\n                                initialLeft={cropInitialLeft}\n                                minHeight={(fixedMask && fixedMask.height) || 100}\n                                minWidth={(fixedMask && fixedMask.width) || 100}\n                                borderColor={borderColor}\n                            />\n                        )\n                        }\n                    </ScrollView>\n                </View>\n            </Modal>\n        )\n    }\n}\n\nexport default ExpoImageManipulator\n\nExpoImageManipulator.defaultProps = {\n    onPictureChoosed: ({ uri, base64 }) => console.log('URI:', uri, base64),\n    borderColor: '#a4a4a4',\n    btnTexts: {\n        crop: 'Crop',\n        rotate: 'Rotate',\n        done: 'Done',\n        processing: 'Processing',\n    },\n    saveOptions: {\n        compress: 1,\n        format: ImageManipulator.SaveFormat.PNG,\n        base64: false,\n    },\n    fixedMask: null,\n}\n\nExpoImageManipulator.propTypes = {\n    borderColor: PropTypes.string,\n    isVisible: PropTypes.bool.isRequired,\n    onPictureChoosed: PropTypes.func,\n    btnTexts: PropTypes.object,\n    fixedMask: PropTypes.object,\n    saveOptions: PropTypes.object,\n    photo: PropTypes.object.isRequired,\n    onToggleModal: PropTypes.func.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}
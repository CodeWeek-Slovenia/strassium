{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\App.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts, Roboto_100Thin, Roboto_300Light, Roboto_400Regular, Roboto_500Medium, Roboto_700Bold, Roboto_900Black } from '@expo-google-fonts/roboto';\nimport { OpenSans_400Regular } from '@expo-google-fonts/open-sans';\nimport { Provider, useSelector } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from \"./Views/reduxComponents/reducers\";\nimport RootStack from \"./Views/root\";\nimport { AuthenticatedUserContext } from \"./Views/AuthenticatedUserProvider\";\nvar store = createStore(reducer);\n\nfunction App() {\n  var _useFonts = useFonts({\n    Thin: Roboto_100Thin,\n    Light: Roboto_300Light,\n    Regular: Roboto_400Regular,\n    Medium: Roboto_500Medium,\n    Bold: Roboto_700Bold,\n    Black: Roboto_900Black,\n    dyslectic: OpenSans_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(RootStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/App.js"],"names":["React","NavigationContainer","createNativeStackNavigator","AppLoading","useFonts","Roboto_100Thin","Roboto_300Light","Roboto_400Regular","Roboto_500Medium","Roboto_700Bold","Roboto_900Black","OpenSans_400Regular","Provider","useSelector","createStore","reducer","RootStack","AuthenticatedUserContext","store","App","Thin","Light","Regular","Medium","Bold","Black","dyslectic","fontsLoaded","error"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,eAAnC,EAAoDC,iBAApD,EAAuEC,gBAAvE,EAAyFC,cAAzF,EAAyGC,eAAzG,QAAgI,2BAAhI;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,SAASC,wBAAT;AAGA,IAAMC,KAAK,GAAGJ,WAAW,CAACC,OAAD,CAAzB;;AAEA,SAASI,GAAT,GAAe;AAEb,kBAA2Bf,QAAQ,CAAC;AAClCgB,IAAAA,IAAI,EAAEf,cAD4B;AAElCgB,IAAAA,KAAK,EAAEf,eAF2B;AAGlCgB,IAAAA,OAAO,EAAEf,iBAHyB;AAIlCgB,IAAAA,MAAM,EAAEf,gBAJ0B;AAKlCgB,IAAAA,IAAI,EAAEf,cAL4B;AAMlCgB,IAAAA,KAAK,EAAEf,eAN2B;AAOlCgB,IAAAA,SAAS,EAAEf;AAPuB,GAAD,CAAnC;AAAA;AAAA,MAAKgB,WAAL;AAAA,MAAkBC,KAAlB;;AAUA,SAEI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AAOD;;AAED,eAAeC,GAAf","sourcesContent":["import * as React from 'react';\r\nimport { View, Text} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//AppLoading component\r\nimport AppLoading from \"expo-app-loading\";\r\n//fonts: Roboto_400Regular, Roboto_500Medium, Roboto_700Bold\r\nimport { useFonts, Roboto_100Thin, Roboto_300Light, Roboto_400Regular, Roboto_500Medium, Roboto_700Bold, Roboto_900Black } from '@expo-google-fonts/roboto';\r\nimport { OpenSans_400Regular } from '@expo-google-fonts/open-sans';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './Views/reduxComponents/reducers';\r\nimport RootStack from './Views/root'\r\nimport { AuthenticatedUserContext } from './Views/AuthenticatedUserProvider';\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nfunction App() {\r\n  //loads the fonts\r\n  let [fontsLoaded, error] = useFonts({\r\n    Thin: Roboto_100Thin, \r\n    Light: Roboto_300Light,\r\n    Regular: Roboto_400Regular,\r\n    Medium: Roboto_500Medium,\r\n    Bold: Roboto_700Bold,\r\n    Black: Roboto_900Black,\r\n    dyslectic: OpenSans_400Regular\r\n  });\r\n\r\n  return (\r\n    \r\n      <Provider store={store}>\r\n          <RootStack/>\r\n      </Provider>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
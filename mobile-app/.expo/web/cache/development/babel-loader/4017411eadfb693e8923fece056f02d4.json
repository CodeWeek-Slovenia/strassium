{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\Views\\\\CompanyViews\\\\FoodPublish.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Picker } from '@react-native-picker/picker';\nimport MainBackground from \"../CustomBackground\";\nimport { col } from \"../clr\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addPost } from \"../reduxComponents/addPost\";\n\nvar FoodFeedScreen = function (_React$Component) {\n  _inherits(FoodFeedScreen, _React$Component);\n\n  var _super = _createSuper(FoodFeedScreen);\n\n  function FoodFeedScreen(props) {\n    var _this;\n\n    _classCallCheck(this, FoodFeedScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: 'none',\n      location: 'none',\n      description: 'none',\n      quantity: 'none',\n      price: 'none',\n      selectedOptions: 'none'\n    };\n    return _this;\n  }\n\n  _createClass(FoodFeedScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var addPost = function addPost() {\n        var post = {\n          username: _this2.state.username,\n          location: _this2.state.location,\n          description: _this2.state.description,\n          quantity: _this2.state.quantity,\n          price: _this2.state.price\n        };\n        console.log(post);\n\n        _this2.props.addPost(post);\n      };\n\n      return React.createElement(MainBackground, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-end',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          color: col.mainColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"ADD FOOD POST\")), React.createElement(View, {\n        style: {\n          flex: 8,\n          alignItems: 'center',\n          justifyContent: 'space-evenly'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.textInputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.textInputStyle, {\n          color: col.mainColor,\n          textAlign: 'center'\n        }],\n        placeholder: \"Product name\",\n        placeholderTextColor: col.mainColor,\n        onChangeText: function onChangeText(description) {\n          return _this2.setState({\n            description: description\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.textInputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.textInputStyle, {\n          color: col.mainColor,\n          textAlign: 'center'\n        }],\n        placeholder: \"Quantity\",\n        keyboardType: 'numeric',\n        placeholderTextColor: col.mainColor,\n        onChangeText: function onChangeText(quantity) {\n          return _this2.setState({\n            quantity: quantity\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.textInputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.textInputStyle, {\n          color: col.mainColor,\n          textAlign: 'center'\n        }],\n        placeholder: \"Price(\\u20AC)\",\n        keyboardType: 'numeric',\n        placeholderTextColor: col.mainColor,\n        onChangeText: function onChangeText(price) {\n          return _this2.setState({\n            price: price\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.textInputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.selectedOptions,\n        style: {\n          height: 50,\n          width: \"100%\",\n          alignItem: \"center\",\n          color: col.mainColor,\n          borderRadius: 15\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this2.setState({\n            selectedOptions: itemValue\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"For consumers\",\n        value: \"potrosniki\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"For animals\",\n        value: \"zivali\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"For providers\",\n        value: \"ponudniki\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      })))), React.createElement(View, {\n        style: {\n          flex: 2,\n          alignItems: 'center',\n          justifyContent: 'center',\n          bottom: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(Pressable, {\n        style: styles.loginButtonStyle,\n        onPress: addPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: col.secondaryColor,\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \"POST\"))));\n    }\n  }]);\n\n  return FoodFeedScreen;\n}(React.Component);\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent'\n  },\n  imageContainer: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  title: {\n    fontSize: 22\n  },\n  TextInputStyle: {\n    backgroundColor: \"#FFC0CB\",\n    borderRadius: 30,\n    width: 200,\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n    textAlign: 'center',\n    color: col.mainColor\n  },\n  textInputContainer: {\n    height: 60,\n    width: \"80%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: col.textColorPrimary,\n    borderRadius: 20\n  },\n  loginButtonStyle: {\n    height: 65,\n    width: \"50%\",\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var dataReducer2 = state.dataReducer2;\n  return {\n    dataReducer2: dataReducer2\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addPost: addPost\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodFeedScreen);","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/Views/CompanyViews/FoodPublish.js"],"names":["React","Component","Picker","MainBackground","col","connect","bindActionCreators","addPost","FoodFeedScreen","props","state","username","location","description","quantity","price","selectedOptions","post","console","log","styles","container","flex","justifyContent","alignItems","fontSize","color","mainColor","textInputContainer","textInputStyle","textAlign","setState","height","width","alignItem","borderRadius","itemValue","itemIndex","bottom","loginButtonStyle","secondaryColor","StyleSheet","create","backgroundColor","imageContainer","title","TextInputStyle","marginBottom","textColorPrimary","mapStateToProps","dataReducer2","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, StyleSheet, Image , FlatList, View, Pressable, TextInput } from 'react-native';\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport MainBackground from '../CustomBackground'\r\nimport {col} from '../clr'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { addPost } from '../reduxComponents/addPost';\r\n\r\n\r\n\r\n\r\nclass FoodFeedScreen extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          username:'none',\r\n          location:'none',\r\n          description:'none',\r\n          quantity:'none',\r\n          price:'none',\r\n          selectedOptions:'none'\r\n        };\r\n      }\r\n    render(){\r\n        const addPost = () =>{\r\n            const post = {username:this.state.username,location:this.state.location,description:this.state.description,quantity:this.state.quantity,price:this.state.price};\r\n            console.log(post)\r\n            this.props.addPost(post);\r\n        }\r\n    \r\n    return (\r\n        <MainBackground style={styles.container}>\r\n            <View style={{flex:1,justifyContent:'flex-end',alignItems:'center'}}>\r\n                <Text style={{fontSize:24,color:col.mainColor}}>ADD FOOD POST</Text>\r\n            </View>\r\n            <View style={{flex:8,alignItems:'center',justifyContent:'space-evenly'}}>\r\n            <View style={styles.textInputContainer}>\r\n            <TextInput\r\n                style={[styles.textInputStyle,{color:col.mainColor,textAlign:'center'}]}\r\n                placeholder=\"Product name\"\r\n                placeholderTextColor={col.mainColor}\r\n                onChangeText={(description) => this.setState({description:description}) }\r\n                />\r\n                \r\n\r\n            </View>\r\n            \r\n            <View style={styles.textInputContainer}>\r\n            <TextInput\r\n                style={[styles.textInputStyle,{color:col.mainColor,textAlign:'center'}]}\r\n                placeholder=\"Quantity\"\r\n                keyboardType={'numeric'}\r\n                placeholderTextColor={col.mainColor}\r\n                onChangeText={(quantity) => this.setState({quantity:quantity}) }\r\n                />\r\n                \r\n\r\n            </View>\r\n            <View style={styles.textInputContainer}>\r\n            <TextInput\r\n                style={[styles.textInputStyle,{color:col.mainColor,textAlign:'center'}]}\r\n                placeholder=\"Price(€)\"\r\n                keyboardType={'numeric'}\r\n                placeholderTextColor={col.mainColor}\r\n                onChangeText={(price) => this.setState({price:price}) }\r\n                />\r\n                \r\n\r\n            </View>\r\n            <View style={styles.textInputContainer}>\r\n            <Picker\r\n                selectedValue={this.state.selectedOptions}\r\n                style={{ height: 50, width: \"100%\",alignItem:\"center\",color:col.mainColor,borderRadius:15 }}//a\r\n                onValueChange={(itemValue, itemIndex) =>\r\n                    this.setState({selectedOptions:itemValue})\r\n                }>\r\n                <Picker.Item label=\"For consumers\" value=\"potrosniki\" />\r\n                <Picker.Item label=\"For animals\" value=\"zivali\" />\r\n                <Picker.Item label=\"For providers\" value=\"ponudniki\" />\r\n                </Picker>\r\n            </View>\r\n            </View>\r\n            <View style={{flex:2, alignItems:'center',justifyContent:'center',bottom:30}}>\r\n                <Pressable style={styles.loginButtonStyle} onPress={addPost}>\r\n                    <Text style={{color:col.secondaryColor,fontSize:20}} >POST</Text>\r\n                </Pressable>\r\n            </View>\r\n        </MainBackground>\r\n      );\r\n    }\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: 'transparent',\r\n    },imageContainer: {\r\n        height:\"100%\",\r\n        width:\"100%\"\r\n      },\r\n      title:{\r\n          fontSize:22\r\n      },\r\n      TextInputStyle:{\r\n        backgroundColor: \"#FFC0CB\",\r\n        borderRadius: 30,\r\n        width: 200,\r\n        height: 45,\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n        textAlign:'center',\r\n        color:col.mainColor\r\n      },textInputContainer:{\r\n          height:60,\r\n          width:\"80%\",\r\n          justifyContent:\"space-evenly\",\r\n          alignItems:\"center\",backgroundColor:col.textColorPrimary,\r\n          borderRadius:20,\r\n      },\r\n      loginButtonStyle:{\r\n          height:65,\r\n          width:\"50%\",\r\n          alignItems:'center',\r\n          justifyContent:'center',\r\n          \r\n      }\r\n  });\r\n  \r\n  \r\nconst mapStateToProps = (state) => {\r\n    const { dataReducer2 } = state\r\n    return { dataReducer2 }\r\n  };\r\n  const mapDispatchToProps = dispatch => (\r\n    bindActionCreators({\r\n        addPost:addPost\r\n    }, dispatch)\r\n  );\r\n  \r\n  export default connect(mapStateToProps,mapDispatchToProps)(FoodFeedScreen);"]},"metadata":{},"sourceType":"module"}
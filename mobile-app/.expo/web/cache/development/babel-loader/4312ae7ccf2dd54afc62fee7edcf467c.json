{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\Views\\\\root.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport EntracneScreen from \"./EntranceScreen\";\nimport ConsumerLoginScreen from \"./ConsumerLoginScreen\";\nimport MainScreen from \"./MainScreen\";\nimport ProviderLoginScreen from \"./CompanyViews/ProviderLoginScreen\";\nimport ProviderRegistrationScreen from \"./CompanyViews/ProviderRegistrationScreen\";\nimport MainCompScreen from \"./CompanyViews/MainComp\";\nimport ConsumerRegistrationScreen from \"./ConsumerRegistrationScreen\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { accType } from \"./Values/accType\";\nimport { AuthenticatedUserContext } from \"./AuthenticatedUserProvider\";\nimport Firebase from \"../Firebase/firebase\";\nimport firebase from 'firebase';\nimport { ActivityIndicator } from 'react-native-paper';\nimport LoadingScreen from \"./loadingScreen\";\nvar Stack = createNativeStackNavigator();\nvar auth = Firebase.auth();\n\nfunction RootStack() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var accType_ = useSelector(function (state) {\n    return state.propertyReducer.accType;\n  });\n  var loadingState = useSelector(function (state) {\n    return state.propertyReducer.loadingState;\n  });\n  var userState = useSelector(function (state) {\n    return state.propertyReducer.user;\n  });\n  var dispatch = useDispatch();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setIsLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dataSet = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  React.useEffect(function () {\n    console.log('/////////////// ' + accType_ + ' ///////////////');\n  }, [accType_]);\n  React.useEffect(function () {\n    setIsLoading(loadingState);\n  }, [loadingState]);\n  React.useEffect(function () {\n    console.log('/////////////// ' + userState + ' ///////////////');\n  }, [userState]);\n  auth.onAuthStateChanged(function _callee(authenticatedUser) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(authenticatedUser);\n\n            try {\n              if (!authenticatedUser) {\n                setUser(false);\n              } else {\n                if (!authenticatedUser.emailVerified) {\n                  setUser(false);\n                } else {\n                  setUser(true);\n                }\n              }\n            } catch (error) {\n              console.log(error);\n            } finally {}\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  function HomeStackConsumer() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function HomeStackProvider() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"MainComp\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"MainComp\",\n      component: MainCompScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  function AuthStackConsumer() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ConsumerLogin\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ConsumerLogin\",\n      component: ConsumerLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ConsumerRegistration\",\n      component: ConsumerRegistrationScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function AuthStackProvider() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ProviderLogin\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ProviderLogin\",\n      component: ProviderLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ProviderRegistration\",\n      component: ProviderRegistrationScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function StartStack() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"Entrance\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Entrance\",\n      component: EntracneScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return isLoading ? React.createElement(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }) : React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, accType_ == accType.NONE.toString() ? React.createElement(StartStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 50\n    }\n  }) : accType_ == accType.CONSUMER.toString() ? user ? React.createElement(HomeStackConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 115\n    }\n  }) : React.createElement(AuthStackConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 138\n    }\n  }) : user ? React.createElement(HomeStackProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 168\n    }\n  }) : React.createElement(AuthStackProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 191\n    }\n  }));\n}\n\nexport default RootStack;","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/Views/root.js"],"names":["React","NavigationContainer","createNativeStackNavigator","EntracneScreen","ConsumerLoginScreen","MainScreen","ProviderLoginScreen","ProviderRegistrationScreen","MainCompScreen","ConsumerRegistrationScreen","useDispatch","useSelector","accType","AuthenticatedUserContext","Firebase","firebase","ActivityIndicator","LoadingScreen","Stack","auth","RootStack","useState","user","setUser","accType_","state","propertyReducer","loadingState","userState","dispatch","isLoading","setIsLoading","dataSet","setData","useEffect","console","log","onAuthStateChanged","authenticatedUser","emailVerified","error","HomeStackConsumer","headerShown","HomeStackProvider","AuthStackConsumer","AuthStackProvider","StartStack","NONE","toString","CONSUMER"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport EntracneScreen from './EntranceScreen';\r\nimport ConsumerLoginScreen from './ConsumerLoginScreen';\r\nimport MainScreen from './MainScreen';\r\nimport ProviderLoginScreen from './CompanyViews/ProviderLoginScreen';\r\nimport ProviderRegistrationScreen from './CompanyViews/ProviderRegistrationScreen';\r\nimport MainCompScreen from './CompanyViews/MainComp';\r\nimport ConsumerRegistrationScreen from './ConsumerRegistrationScreen'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accType } from './Values/accType';\r\nimport { AuthenticatedUserContext } from './AuthenticatedUserProvider';\r\nimport Firebase from '../Firebase/firebase';\r\nimport firebase from 'firebase';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\nimport LoadingScreen from './loadingScreen';\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst auth = Firebase.auth();\r\n\r\nfunction RootStack() {\r\n\r\n    const [user,setUser] = React.useState(false)\r\n    const accType_ = useSelector(state => state.propertyReducer.accType)\r\n    const loadingState = useSelector(state => state.propertyReducer.loadingState)\r\n    const userState = useSelector(state => state.propertyReducer.user)\r\n    const dispatch = useDispatch();\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [dataSet,setData] = React.useState('');\r\n\r\n    React.useEffect(() => {console.log('/////////////// ' + accType_ +' ///////////////')},[accType_])\r\n    React.useEffect(() => {setIsLoading(loadingState)},[loadingState])\r\n    React.useEffect(() => {console.log('/////////////// ' + userState +' ///////////////')},[userState])\r\n    \r\n    auth.onAuthStateChanged(async (authenticatedUser) => {\r\n      console.log(authenticatedUser)\r\n      try{\r\n        if (!authenticatedUser){\r\n          setUser(false);        \r\n        }\r\n        else{\r\n          if(!authenticatedUser.emailVerified){\r\n            //setVertifyed(false);\r\n            setUser(false);         \r\n          }\r\n          else{\r\n            setUser(true);\r\n            //setVertifyed(true);\r\n          }\r\n        }\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n        }\r\n      finally{\r\n      }\r\n    \r\n});\r\n\r\n\r\n  function HomeStackConsumer() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"Main\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"Main\" component={MainScreen} />        \r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function HomeStackProvider() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"MainComp\" screenOptions={{ headerShown: false }} >\r\n            <Stack.Screen name=\"MainComp\" component={MainCompScreen} />      \r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n\r\n  function AuthStackConsumer() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"ConsumerLogin\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"ConsumerLogin\" component={ConsumerLoginScreen} />\r\n        <Stack.Screen name=\"ConsumerRegistration\" component={ConsumerRegistrationScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function AuthStackProvider() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"ProviderLogin\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"ProviderLogin\" component={ProviderLoginScreen} />\r\n        <Stack.Screen name=\"ProviderRegistration\" component={ProviderRegistrationScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function StartStack() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"Entrance\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"Entrance\" component={EntracneScreen}/>\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  return (\r\n      isLoading ? <LoadingScreen/> :\r\n      <NavigationContainer>\r\n          {accType_ == accType.NONE.toString() ? <StartStack/> : accType_ == accType.CONSUMER.toString() ? user ? <HomeStackConsumer/> : <AuthStackConsumer/> : user ? <HomeStackProvider/> : <AuthStackProvider/>}\r\n      </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default RootStack;"]},"metadata":{},"sourceType":"module"}
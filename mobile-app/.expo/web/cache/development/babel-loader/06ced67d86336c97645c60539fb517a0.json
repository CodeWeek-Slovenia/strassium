{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\Views\\\\root.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport EntracneScreen from \"./EntranceScreen\";\nimport ConsumerLoginScreen from \"./ConsumerLoginScreen\";\nimport MainScreen from \"./MainScreen\";\nimport ProviderLoginScreen from \"./CompanyViews/ProviderLoginScreen\";\nimport ProviderRegistrationScreen from \"./CompanyViews/ProviderRegistrationScreen\";\nimport MainCompScreen from \"./CompanyViews/MainComp\";\nimport ConsumerRegistrationScreen from \"./ConsumerRegistrationScreen\";\nimport { useSelector } from 'react-redux';\nimport { accType } from \"./Values/accType\";\nimport { AuthenticatedUserContext } from \"./AuthenticatedUserProvider\";\nimport Firebase from \"../Firebase/firebase\";\nvar Stack = createNativeStackNavigator();\nvar auth = Firebase.auth();\n\nfunction RootStack() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLoading = _React$useState4[0],\n      setIsLoading = _React$useState4[1];\n\n  var accType_ = useSelector(function (state) {\n    return state.propertyReducer.accType;\n  });\n  React.useEffect(function () {\n    console.log(accType_);\n  }, [accType_]);\n  auth.onAuthStateChanged(function _callee(authenticatedUser) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(authenticatedUser.emailVerified ? setUser(authenticatedUser.emailVerified) : setUser(false));\n\n          case 3:\n            console.log(authenticatedUser);\n            setIsLoading(false);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n\n  function HomeStackConsumer() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"Main\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function HomeStackProvider() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"MainComp\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"MainComp\",\n      component: MainCompScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  function AuthStackConsumer() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ConsumerLogin\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ConsumerLogin\",\n      component: ConsumerLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ConsumerRegistration\",\n      component: ConsumerRegistrationScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function AuthStackProvider() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ProviderLogin\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ProviderLogin\",\n      component: ProviderLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ProviderRegistration\",\n      component: ProviderRegistrationScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function StartStack() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"Entrance\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Entrance\",\n      component: EntracneScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, accType_ == accType.NONE.toString() ? React.createElement(StartStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 52\n    }\n  }) : accType_ == accType.CONSUMER.toString() ? user ? React.createElement(HomeStackConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 117\n    }\n  }) : React.createElement(AuthStackConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 140\n    }\n  }) : user ? React.createElement(HomeStackProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 170\n    }\n  }) : React.createElement(AuthStackProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 193\n    }\n  }));\n}\n\nexport default RootStack;","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/Views/root.js"],"names":["React","NavigationContainer","createNativeStackNavigator","EntracneScreen","ConsumerLoginScreen","MainScreen","ProviderLoginScreen","ProviderRegistrationScreen","MainCompScreen","ConsumerRegistrationScreen","useSelector","accType","AuthenticatedUserContext","Firebase","Stack","auth","RootStack","useState","user","setUser","isLoading","setIsLoading","accType_","state","propertyReducer","useEffect","console","log","onAuthStateChanged","authenticatedUser","emailVerified","HomeStackConsumer","headerShown","HomeStackProvider","AuthStackConsumer","AuthStackProvider","StartStack","NONE","toString","CONSUMER"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport EntracneScreen from './EntranceScreen';\r\nimport ConsumerLoginScreen from './ConsumerLoginScreen';\r\nimport MainScreen from './MainScreen';\r\nimport ProviderLoginScreen from './CompanyViews/ProviderLoginScreen';\r\nimport ProviderRegistrationScreen from './CompanyViews/ProviderRegistrationScreen';\r\nimport MainCompScreen from './CompanyViews/MainComp';\r\nimport ConsumerRegistrationScreen from './ConsumerRegistrationScreen'\r\nimport { useSelector } from 'react-redux';\r\nimport { accType } from './Values/accType';\r\nimport { AuthenticatedUserContext } from './AuthenticatedUserProvider';\r\nimport Firebase from '../Firebase/firebase';\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst auth = Firebase.auth();\r\n\r\nfunction RootStack() {\r\n\r\n    const [user,setUser] = React.useState(false)\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    const accType_ = useSelector(state => state.propertyReducer.accType)\r\n    React.useEffect(() => {console.log(accType_)},[accType_])\r\n    \r\n    auth.onAuthStateChanged(async (authenticatedUser) => {\r\n        try {\r\n        await (authenticatedUser.emailVerified ? setUser(authenticatedUser.emailVerified) : setUser(false));\r\n        console.log(authenticatedUser)\r\n\r\n        setIsLoading(false);\r\n        } catch (error) {\r\n        console.log(error);\r\n        }\r\n    \r\n});\r\n\r\n  function HomeStackConsumer() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"Main\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"Main\" component={MainScreen} />        \r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function HomeStackProvider() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"MainComp\" screenOptions={{ headerShown: false }} >\r\n            <Stack.Screen name=\"MainComp\" component={MainCompScreen} />      \r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  \r\n\r\n  function AuthStackConsumer() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"ConsumerLogin\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"ConsumerLogin\" component={ConsumerLoginScreen} />\r\n        <Stack.Screen name=\"ConsumerRegistration\" component={ConsumerRegistrationScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function AuthStackProvider() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"ProviderLogin\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"ProviderLogin\" component={ProviderLoginScreen} />\r\n        <Stack.Screen name=\"ProviderRegistration\" component={ProviderRegistrationScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  function StartStack() {\r\n    return(\r\n      <Stack.Navigator initialRouteName=\"Entrance\" screenOptions={{ headerShown: false }} >\r\n        <Stack.Screen name=\"Entrance\" component={EntracneScreen}/>\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  return (\r\n        <NavigationContainer>\r\n            {accType_ == accType.NONE.toString() ? <StartStack/> : accType_ == accType.CONSUMER.toString() ? user ? <HomeStackConsumer/> : <AuthStackConsumer/> : user ? <HomeStackProvider/> : <AuthStackProvider/>}\r\n        {/* <Stack.Navigator initialRouteName=\"Entrance\" screenOptions={{ headerShown: false }} >\r\n          <Stack.Screen name=\"Entrance\" component={EntracneScreen} />\r\n          <Stack.Screen name=\"ConsumerLogin\" component={ConsumerLoginScreen} />\r\n          <Stack.Screen name=\"ConsumerRegistration\" component={RegistrationScreen} />\r\n          <Stack.Screen name=\"CompanyLogin\" component={CompanyLoginScreen} />\r\n          <Stack.Screen name=\"Main\" component={MainScreen} />\r\n          <Stack.Screen name=\"MainComp\" component={MainCompScreen} />\r\n        </Stack.Navigator> */}\r\n      </NavigationContainer>\r\n    \r\n  );\r\n}\r\n\r\nexport default RootStack;"]},"metadata":{},"sourceType":"module"}
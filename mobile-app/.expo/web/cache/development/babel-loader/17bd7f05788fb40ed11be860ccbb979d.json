{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\node_modules\\\\expo-image-crop\\\\example\\\\manipulator\\\\ImageCropOverlay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ImageCropOverlay = function (_React$Component) {\n  _inherits(ImageCropOverlay, _React$Component);\n\n  var _super = _createSuper(ImageCropOverlay);\n\n  function ImageCropOverlay() {\n    var _this;\n\n    _classCallCheck(this, ImageCropOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      draggingTL: false,\n      draggingTM: false,\n      draggingTR: false,\n      draggingML: false,\n      draggingMM: false,\n      draggingMR: false,\n      draggingBL: false,\n      draggingBM: false,\n      draggingBR: false,\n      initialTop: _this.props.initialTop,\n      initialLeft: _this.props.initialLeft,\n      initialWidth: _this.props.initialWidth,\n      initialHeight: _this.props.initialHeight,\n      offsetTop: 0,\n      offsetLeft: 0\n    };\n    _this.panResponder = {};\n\n    _this.handleStartShouldSetPanResponder = function (event) {\n      return true;\n    };\n\n    _this.handlePanResponderGrant = function (event) {\n      var selectedItem = _this.getTappedItem(event.nativeEvent.pageX, event.nativeEvent.pageY);\n\n      if (selectedItem == 'tl') {\n        _this.setState({\n          draggingTL: true\n        });\n      } else if (selectedItem == 'tm') {\n        _this.setState({\n          draggingTM: true\n        });\n      } else if (selectedItem == 'tr') {\n        _this.setState({\n          draggingTR: true\n        });\n      } else if (selectedItem == 'ml') {\n        _this.setState({\n          draggingML: true\n        });\n      } else if (selectedItem == 'mm') {\n        _this.setState({\n          draggingMM: true\n        });\n      } else if (selectedItem == 'mr') {\n        _this.setState({\n          draggingMR: true\n        });\n      } else if (selectedItem == 'bl') {\n        _this.setState({\n          draggingBL: true\n        });\n      } else if (selectedItem == 'bm') {\n        _this.setState({\n          draggingBM: true\n        });\n      } else if (selectedItem == 'br') {\n        _this.setState({\n          draggingBR: true\n        });\n      }\n    };\n\n    _this.handlePanResponderMove = function (e, gestureState) {\n      _this.setState({\n        offsetTop: gestureState.dy,\n        offsetLeft: gestureState.dx\n      });\n    };\n\n    _this.handlePanResponderEnd = function (e, gestureState) {\n      var _this$state = _this.state,\n          initialTop = _this$state.initialTop,\n          initialLeft = _this$state.initialLeft,\n          initialWidth = _this$state.initialWidth,\n          initialHeight = _this$state.initialHeight,\n          draggingTL = _this$state.draggingTL,\n          draggingTM = _this$state.draggingTM,\n          draggingTR = _this$state.draggingTR,\n          draggingML = _this$state.draggingML,\n          draggingMM = _this$state.draggingMM,\n          draggingMR = _this$state.draggingMR,\n          draggingBL = _this$state.draggingBL,\n          draggingBM = _this$state.draggingBM,\n          draggingBR = _this$state.draggingBR;\n      var state = {\n        draggingTL: false,\n        draggingTM: false,\n        draggingTR: false,\n        draggingML: false,\n        draggingMM: false,\n        draggingMR: false,\n        draggingBL: false,\n        draggingBM: false,\n        draggingBR: false,\n        offsetTop: 0,\n        offsetLeft: 0\n      };\n      state.initialTop = initialTop + (draggingTL || draggingTM || draggingTR || draggingMM ? gestureState.dy : 0);\n      state.initialLeft = initialLeft + (draggingTL || draggingML || draggingBL || draggingMM ? gestureState.dx : 0);\n      state.initialWidth = initialWidth + (draggingTL || draggingML || draggingBL ? -gestureState.dx : draggingTM || draggingMM || draggingBM ? 0 : gestureState.dx);\n      state.initialHeight = initialHeight + (draggingTL || draggingTM || draggingTR ? -gestureState.dy : draggingML || draggingMM || draggingMR ? 0 : gestureState.dy);\n\n      if (state.initialWidth > _this.props.initialWidth) {\n        state.initialWidth = _this.props.initialWidth;\n      }\n\n      if (state.initialWidth < _this.props.minWidth) {\n        state.initialWidth = _this.props.minWidth;\n      }\n\n      if (state.initialHeight > _this.props.initialHeight) {\n        state.initialHeight = _this.props.initialHeight;\n      }\n\n      if (state.initialHeight < _this.props.minHeight) {\n        state.initialHeight = _this.props.minHeight;\n      }\n\n      _this.setState(state);\n\n      _this.props.onLayoutChanged(state.initialTop, state.initialLeft, state.initialWidth, state.initialHeight);\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageCropOverlay, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder,\n        onPanResponderGrant: this.handlePanResponderGrant,\n        onPanResponderMove: this.handlePanResponderMove,\n        onPanResponderRelease: this.handlePanResponderEnd,\n        onPanResponderTerminate: this.handlePanResponderEnd\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          draggingTL = _this$state2.draggingTL,\n          draggingTM = _this$state2.draggingTM,\n          draggingTR = _this$state2.draggingTR,\n          draggingML = _this$state2.draggingML,\n          draggingMM = _this$state2.draggingMM,\n          draggingMR = _this$state2.draggingMR,\n          draggingBL = _this$state2.draggingBL,\n          draggingBM = _this$state2.draggingBM,\n          draggingBR = _this$state2.draggingBR,\n          initialTop = _this$state2.initialTop,\n          initialLeft = _this$state2.initialLeft,\n          initialHeight = _this$state2.initialHeight,\n          initialWidth = _this$state2.initialWidth,\n          offsetTop = _this$state2.offsetTop,\n          offsetLeft = _this$state2.offsetLeft;\n      var style = {};\n      style.top = initialTop + (draggingTL || draggingTM || draggingTR || draggingMM ? offsetTop : 0);\n      style.left = initialLeft + (draggingTL || draggingML || draggingBL || draggingMM ? offsetLeft : 0);\n      style.width = initialWidth + (draggingTL || draggingML || draggingBL ? -offsetLeft : draggingTM || draggingMM || draggingBM ? 0 : offsetLeft);\n      style.height = initialHeight + (draggingTL || draggingTM || draggingTR ? -offsetTop : draggingML || draggingMM || draggingMR ? 0 : offsetTop);\n\n      if (style.width > this.props.initialWidth) {\n        style.width = this.props.initialWidth;\n      }\n\n      if (style.width < this.props.minWidth) {\n        style.width = this.props.minWidth;\n      }\n\n      if (style.height > this.props.initialHeight) {\n        style.height = this.props.initialHeight;\n      }\n\n      if (style.height < this.props.minHeight) {\n        style.height = this.props.minHeight;\n      }\n\n      var borderColor = this.props.borderColor;\n      return React.createElement(View, _extends({}, this.panResponder.panHandlers, {\n        style: [{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n          position: 'absolute',\n          borderStyle: 'solid',\n          borderWidth: 2,\n          borderColor: borderColor,\n          backgroundColor: 'rgb(0,0,0,0.5)'\n        }, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          flex: 1 / 3,\n          backgroundColor: 'transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingTL ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingTM ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingTR ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          flex: 1 / 3,\n          backgroundColor: 'transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingML ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingMM ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingMR ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          width: '100%',\n          flex: 1 / 3,\n          backgroundColor: 'transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingBL ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingBM ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: borderColor,\n          borderWidth: 0,\n          backgroundColor: draggingBR ? 'transparent' : 'transparent',\n          flex: 1 / 3,\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1 / 3,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'absolute',\n          left: 5,\n          top: 5,\n          borderLeftWidth: 2,\n          borderTopWidth: 2,\n          height: 48,\n          width: 48,\n          borderColor: '#f4f4f4',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 3,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'absolute',\n          right: 5,\n          top: 5,\n          borderRightWidth: 2,\n          borderTopWidth: 2,\n          height: 48,\n          width: 48,\n          borderColor: '#f4f4f4',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1 / 3,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 3,\n          borderBottomWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1 / 3,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid',\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'absolute',\n          left: 5,\n          bottom: 5,\n          borderLeftWidth: 2,\n          borderBottomWidth: 2,\n          height: 48,\n          width: 48,\n          borderColor: '#f4f4f4',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 3,\n          borderRightWidth: 1,\n          borderColor: '#c9c9c9',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 3,\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'absolute',\n          right: 5,\n          bottom: 5,\n          borderRightWidth: 2,\n          borderBottomWidth: 2,\n          height: 48,\n          width: 48,\n          borderColor: '#f4f4f4',\n          borderStyle: 'solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }, {\n    key: \"getTappedItem\",\n    value: function getTappedItem(x, y) {\n      var _this$state3 = this.state,\n          initialLeft = _this$state3.initialLeft,\n          initialTop = _this$state3.initialTop,\n          initialWidth = _this$state3.initialWidth,\n          initialHeight = _this$state3.initialHeight;\n      var xPos = parseInt((x - initialLeft) / (initialWidth / 3));\n      var yPos = parseInt((y - initialTop - 64) / (initialHeight / 3));\n      var index = yPos * 3 + xPos;\n\n      if (index == 0) {\n        return 'tl';\n      }\n\n      if (index == 1) {\n        return 'tm';\n      }\n\n      if (index == 2) {\n        return 'tr';\n      }\n\n      if (index == 3) {\n        return 'ml';\n      }\n\n      if (index == 4) {\n        return 'mm';\n      }\n\n      if (index == 5) {\n        return 'mr';\n      }\n\n      if (index == 6) {\n        return 'bl';\n      }\n\n      if (index == 7) {\n        return 'bm';\n      }\n\n      if (index == 8) {\n        return 'br';\n      }\n\n      return '';\n    }\n  }]);\n\n  return ImageCropOverlay;\n}(React.Component);\n\nexport default ImageCropOverlay;","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/node_modules/expo-image-crop/example/manipulator/ImageCropOverlay.js"],"names":["React","Component","ImageCropOverlay","state","draggingTL","draggingTM","draggingTR","draggingML","draggingMM","draggingMR","draggingBL","draggingBM","draggingBR","initialTop","props","initialLeft","initialWidth","initialHeight","offsetTop","offsetLeft","panResponder","handleStartShouldSetPanResponder","event","handlePanResponderGrant","selectedItem","getTappedItem","nativeEvent","pageX","pageY","setState","handlePanResponderMove","e","gestureState","dy","dx","handlePanResponderEnd","minWidth","minHeight","onLayoutChanged","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","style","top","left","width","height","borderColor","panHandlers","flex","justifyContent","alignItems","position","borderStyle","borderWidth","backgroundColor","flexDirection","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopWidth","right","bottom","x","y","xPos","parseInt","yPos","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, PanResponder, Dimensions } from 'react-native'\n\nclass ImageCropOverlay extends React.Component {\n    state = {\n        draggingTL: false,\n        draggingTM: false,\n        draggingTR: false,\n        draggingML: false,\n        draggingMM: false,\n        draggingMR: false,\n        draggingBL: false,\n        draggingBM: false,\n        draggingBR: false,\n        initialTop: this.props.initialTop,\n        initialLeft: this.props.initialLeft,\n        initialWidth: this.props.initialWidth,\n        initialHeight: this.props.initialHeight,\n\n        offsetTop: 0,\n        offsetLeft: 0,\n    }\n\n    panResponder = {}\n\n    UNSAFE_componentWillMount() {\n        this.panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder,\n            onPanResponderGrant: this.handlePanResponderGrant,\n            onPanResponderMove: this.handlePanResponderMove,\n            onPanResponderRelease: this.handlePanResponderEnd,\n            onPanResponderTerminate: this.handlePanResponderEnd,\n        })\n    }\n\n    render() {\n        const {\n            draggingTL, draggingTM, draggingTR, draggingML, draggingMM, draggingMR, draggingBL, draggingBM, draggingBR, initialTop, initialLeft, initialHeight, initialWidth, offsetTop, offsetLeft,\n        } = this.state\n        const style = {}\n\n        style.top = initialTop + ((draggingTL || draggingTM || draggingTR || draggingMM) ? offsetTop : 0)\n        style.left = initialLeft + ((draggingTL || draggingML || draggingBL || draggingMM) ? offsetLeft : 0)\n        style.width = initialWidth + ((draggingTL || draggingML || draggingBL) ? -offsetLeft : (draggingTM || draggingMM || draggingBM) ? 0 : offsetLeft)\n        style.height = initialHeight + ((draggingTL || draggingTM || draggingTR) ? -offsetTop : (draggingML || draggingMM || draggingMR) ? 0 : offsetTop)\n\n        if (style.width > this.props.initialWidth) {\n            style.width = this.props.initialWidth\n        }\n        if (style.width < this.props.minWidth) {\n            style.width = this.props.minWidth\n        }\n        if (style.height > this.props.initialHeight) {\n            style.height = this.props.initialHeight\n        }\n        if (style.height < this.props.minHeight) {\n            style.height = this.props.minHeight\n        }\n        const { borderColor } = this.props\n        return (\n            <View {...this.panResponder.panHandlers}\n                style={[{\n                    flex: 1, justifyContent: 'center', alignItems: 'center', position: 'absolute', borderStyle: 'solid', borderWidth: 2, borderColor, backgroundColor: 'rgb(0,0,0,0.5)',\n                }, style]}\n            >\n                <View style={{\n                    flexDirection: 'row', width: '100%', flex: 1 / 3, backgroundColor: 'transparent',\n                }}\n                >\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingTL ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingTM ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingTR ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                </View>\n                <View style={{\n                    flexDirection: 'row', width: '100%', flex: 1 / 3, backgroundColor: 'transparent',\n                }}\n                >\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingML ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingMM ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingMR ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                </View>\n                <View style={{\n                    flexDirection: 'row', width: '100%', flex: 1 / 3, backgroundColor: 'transparent',\n                }}\n                >\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingBL ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingBM ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                    <View style={{\n                        borderColor, borderWidth: 0, backgroundColor: draggingBR ? 'transparent' : 'transparent', flex: 1 / 3, height: '100%',\n                    }}\n                    />\n                </View>\n                <View style={{\n                    top: 0, left: 0, width: '100%', height: '100%', position: 'absolute', backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                }}\n                >\n                    <View style={{ flex: 1 / 3, flexDirection: 'row' }}>\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        >\n                            <View style={{\n                                position: 'absolute', left: 5, top: 5, borderLeftWidth: 2, borderTopWidth: 2, height: 48, width: 48, borderColor: '#f4f4f4', borderStyle: 'solid',\n                            }}\n                            />\n                        </View>\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        />\n                        <View style={{\n                            flex: 3, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        >\n                            <View style={{\n                                position: 'absolute', right: 5, top: 5, borderRightWidth: 2, borderTopWidth: 2, height: 48, width: 48, borderColor: '#f4f4f4', borderStyle: 'solid',\n                            }}\n                            />\n                        </View>\n                    </View>\n                    <View style={{ flex: 1 / 3, flexDirection: 'row' }}>\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        />\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        />\n                        <View style={{\n                            flex: 3, borderBottomWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        />\n                    </View>\n                    <View style={{ flex: 1 / 3, flexDirection: 'row' }}>\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid', position: 'relative',\n                        }}\n                        >\n                            <View style={{\n                                position: 'absolute', left: 5, bottom: 5, borderLeftWidth: 2, borderBottomWidth: 2, height: 48, width: 48, borderColor: '#f4f4f4', borderStyle: 'solid',\n                            }}\n                            />\n                        </View>\n                        <View style={{\n                            flex: 3, borderRightWidth: 1, borderColor: '#c9c9c9', borderStyle: 'solid',\n                        }}\n                        />\n                        <View style={{ flex: 3, position: 'relative' }}>\n                            <View style={{\n                                position: 'absolute', right: 5, bottom: 5, borderRightWidth: 2, borderBottomWidth: 2, height: 48, width: 48, borderColor: '#f4f4f4', borderStyle: 'solid',\n                            }}\n                            />\n                        </View>\n                    </View>\n                </View>\n            </View>\n        )\n    }\n\n    getTappedItem(x, y) {\n        const {\n            initialLeft, initialTop, initialWidth, initialHeight,\n        } = this.state\n        const xPos = parseInt((x - initialLeft) / (initialWidth / 3))\n        const yPos = parseInt((y - initialTop - 64) / (initialHeight / 3))\n\n        const index = yPos * 3 + xPos\n        if (index == 0) {\n            return 'tl'\n        } if (index == 1) {\n            return 'tm'\n        } if (index == 2) {\n            return 'tr'\n        } if (index == 3) {\n            return 'ml'\n        } if (index == 4) {\n            return 'mm'\n        } if (index == 5) {\n            return 'mr'\n        } if (index == 6) {\n            return 'bl'\n        } if (index == 7) {\n            return 'bm'\n        } if (index == 8) {\n            return 'br'\n        }\n        return ''\n    }\n\n    // Should we become active when the user presses down on the square?\n    handleStartShouldSetPanResponder = event => true\n\n    // We were granted responder status! Let's update the UI\n    handlePanResponderGrant = (event) => {\n        // console.log(event.nativeEvent.locationX + ', ' + event.nativeEvent.locationY)\n\n        const selectedItem = this.getTappedItem(event.nativeEvent.pageX, event.nativeEvent.pageY)\n        if (selectedItem == 'tl') {\n            this.setState({ draggingTL: true })\n        } else if (selectedItem == 'tm') {\n            this.setState({ draggingTM: true })\n        } else if (selectedItem == 'tr') {\n            this.setState({ draggingTR: true })\n        } else if (selectedItem == 'ml') {\n            this.setState({ draggingML: true })\n        } else if (selectedItem == 'mm') {\n            this.setState({ draggingMM: true })\n        } else if (selectedItem == 'mr') {\n            this.setState({ draggingMR: true })\n        } else if (selectedItem == 'bl') {\n            this.setState({ draggingBL: true })\n        } else if (selectedItem == 'bm') {\n            this.setState({ draggingBM: true })\n        } else if (selectedItem == 'br') {\n            this.setState({ draggingBR: true })\n        }\n    }\n\n    // Every time the touch/mouse moves\n    handlePanResponderMove = (e, gestureState) => {\n        // Keep track of how far we've moved in total (dx and dy)\n        this.setState({\n            offsetTop: gestureState.dy,\n            offsetLeft: gestureState.dx,\n        })\n    }\n\n    // When the touch/mouse is lifted\n    handlePanResponderEnd = (e, gestureState) => {\n        const {\n            initialTop, initialLeft, initialWidth, initialHeight, draggingTL, draggingTM, draggingTR, draggingML, draggingMM, draggingMR, draggingBL, draggingBM, draggingBR,\n        } = this.state\n\n        const state = {\n            draggingTL: false,\n            draggingTM: false,\n            draggingTR: false,\n            draggingML: false,\n            draggingMM: false,\n            draggingMR: false,\n            draggingBL: false,\n            draggingBM: false,\n            draggingBR: false,\n            offsetTop: 0,\n            offsetLeft: 0,\n        }\n\n        state.initialTop = initialTop + ((draggingTL || draggingTM || draggingTR || draggingMM) ? gestureState.dy : 0)\n        state.initialLeft = initialLeft + ((draggingTL || draggingML || draggingBL || draggingMM) ? gestureState.dx : 0)\n        state.initialWidth = initialWidth + ((draggingTL || draggingML || draggingBL) ? -gestureState.dx : (draggingTM || draggingMM || draggingBM) ? 0 : gestureState.dx)\n        state.initialHeight = initialHeight + ((draggingTL || draggingTM || draggingTR) ? -gestureState.dy : (draggingML || draggingMM || draggingMR) ? 0 : gestureState.dy)\n\n        if (state.initialWidth > this.props.initialWidth) {\n            state.initialWidth = this.props.initialWidth\n        }\n        if (state.initialWidth < this.props.minWidth) {\n            state.initialWidth = this.props.minWidth\n        }\n        if (state.initialHeight > this.props.initialHeight) {\n            state.initialHeight = this.props.initialHeight\n        }\n        if (state.initialHeight < this.props.minHeight) {\n            state.initialHeight = this.props.minHeight\n        }\n\n        this.setState(state)\n        this.props.onLayoutChanged(state.initialTop, state.initialLeft, state.initialWidth, state.initialHeight)\n    }\n}\n\nexport default ImageCropOverlay\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aljaz\\\\Main\\\\Development\\\\SmartFood\\\\main\\\\Views\\\\ConsumerLoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { easeGradient } from 'react-native-easing-gradient';\nimport { col } from \"./clr.js\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SomeComponent from \"./CustomBackground.js\";\nimport methods, { registration, signIn } from \"../Firebase/methods\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { accTypeChange } from \"./reduxComponents/accTypeAction.js\";\nimport { accType } from \"./Values/accType.js\";\n\nvar CostumerLoginScreen = function (_React$Component) {\n  _inherits(CostumerLoginScreen, _React$Component);\n\n  var _super = _createSuper(CostumerLoginScreen);\n\n  function CostumerLoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CostumerLoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: 'none',\n      password: '',\n      loadingStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(CostumerLoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var onLoginClick = function onLoginClick() {\n        return _regeneratorRuntime.async(function onLoginClick$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(_this2.state.email !== '' && _this2.state.password !== '')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(signIn(_this2.state.email, _this2.state.password));\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 6]], Promise);\n      };\n\n      var onRegistrationClick = function onRegistrationClick() {\n        return _regeneratorRuntime.async(function onRegistrationClick$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.props.navigation.navigate('ConsumerRegistration');\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var onBackClick = function onBackClick() {\n        _this2.props.accTypeChange(accType.NONE);\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, this.state.loadingStatus ? React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: 70,\n        color: col.secondaryColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      })) : React.createElement(SomeComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.5,\n          justifyContent: \"flex-end\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Pressable, {\n        onPress: onBackClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \"Back\"))), React.createElement(View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, \"Login\")), React.createElement(View, {\n        style: styles.formContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email.replace(' ', '')\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Geslo\",\n        placeholderTextColor: \"#003f5c\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot_button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, \"Forgot password?\")), React.createElement(Pressable, {\n        onPress: onRegistrationClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot_button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }, \"Registration\")))), React.createElement(View, {\n        style: {\n          flex: 2,\n          alignItems: \"center\",\n          justifyContent: \"flex-start\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: onLoginClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      }, \"LOGIN\"))))));\n    }\n  }]);\n\n  return CostumerLoginScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  formContainer: {\n    flex: 3,\n    backgroundColor: \"transparent\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    marginBottom: 20\n  },\n  inputView: {\n    backgroundColor: col.textColorSecondary,\n    borderRadius: 30,\n    width: 200,\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    color: col.clrText,\n    fontFamily: \"Light\",\n    textAlign: \"center\",\n    height: 50,\n    flex: 1\n  },\n  forgot_button: {\n    color: col.clrText,\n    fontFamily: \"Regular\",\n    height: 20,\n    marginBottom: 15\n  },\n  loginBtn: {\n    width: 300,\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    backgroundColor: col.secondaryColor\n  },\n  loginText: {\n    color: col.clrText,\n    fontFamily: \"Bold\"\n  },\n  titleContainer: {\n    flex: 1.5,\n    backgroundColor: \"transparent\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\"\n  },\n  titleText: {\n    color: col.clrText,\n    fontFamily: \"Bold\",\n    fontSize: 40\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var propertyReducer = state.propertyReducer;\n  return {\n    propertyReducer: propertyReducer\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    accTypeChange: accTypeChange\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CostumerLoginScreen);","map":{"version":3,"sources":["C:/Users/aljaz/Main/Development/SmartFood/main/Views/ConsumerLoginScreen.js"],"names":["StatusBar","React","useState","LinearGradient","easeGradient","col","SomeComponent","methods","registration","signIn","bindActionCreators","connect","accTypeChange","accType","CostumerLoginScreen","props","state","email","password","loadingStatus","onLoginClick","console","log","message","onRegistrationClick","navigation","navigate","onBackClick","NONE","styles","container","flex","justifyContent","alignContent","secondaryColor","alignItems","titleContainer","titleText","formContainer","inputView","TextInput","setState","replace","forgot_button","loginBtn","loginText","Component","StyleSheet","create","backgroundColor","marginBottom","textColorSecondary","borderRadius","width","height","color","clrText","fontFamily","textAlign","marginTop","fontSize","mapStateToProps","propertyReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { easeGradient } from 'react-native-easing-gradient'\r\nimport {col} from \"./clr.js\"\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  Pressable\r\n} from \"react-native\";\r\nimport SomeComponent from \"./CustomBackground.js\";\r\nimport methods, { registration, signIn } from '../Firebase/methods'\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { accTypeChange } from \"./reduxComponents/accTypeAction.js\";\r\nimport { accType } from \"./Values/accType.js\";\r\n\r\n \r\nclass CostumerLoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'none',\r\n      password:'',\r\n      loadingStatus:false\r\n    };\r\n  }\r\n  render(){\r\n  const onLoginClick = async () => {\r\n    try {\r\n      if (this.state.email !== '' && this.state.password !== '') {\r\n        //this.state.console.log(email)\r\n        await signIn(this.state.email,this.state.password)\r\n        //navigation.navigate('Main')\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n  const onRegistrationClick = async () => {\r\n    this.props.navigation.navigate('ConsumerRegistration')\r\n  }\r\n\r\n  const onBackClick = () =>{\r\n    this.props.accTypeChange(accType.NONE)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      { this.state.loadingStatus ? \r\n        <View style={{flex:1,justifyContent:\"center\",alignContent:\"center\"}}>\r\n          <ActivityIndicator size={70} color={col.secondaryColor} />\r\n        </View> :\r\n        <SomeComponent>\r\n        <View style={styles.container}>\r\n        <View style={{flex:0.5,justifyContent:\"flex-end\",alignItems:\"center\"}}>\r\n              <Pressable onPress={onBackClick}>\r\n                <Text>Back</Text>\r\n              </Pressable>\r\n            </View>\r\n            <View style={styles.titleContainer}>\r\n                <Text style={styles.titleText}>Login</Text>\r\n            </View>\r\n            <View style={styles.formContainer}>\r\n                <View style={styles.inputView}>\r\n                    <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Email\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    onChangeText={(email) => this.setState({email:email.replace(' ','')})}\r\n                    />\r\n                </View>\r\n        \r\n                <View style={styles.inputView}>\r\n                    <TextInput\r\n                    style={styles.TextInput}\r\n                    placeholder=\"Geslo\"\r\n                    placeholderTextColor=\"#003f5c\"\r\n                    secureTextEntry={true}\r\n                    onChangeText={(password) => this.setState({password:password})}\r\n                    />\r\n                </View>\r\n                <View style={{alignItems: \"center\",justifyContent: \"center\"}}>\r\n                  <TouchableOpacity>\r\n                      <Text style={styles.forgot_button}>Forgot password?</Text>\r\n                  </TouchableOpacity>\r\n                  <Pressable onPress={onRegistrationClick}>\r\n                      <Text style={styles.forgot_button}>Registration</Text>\r\n                  </Pressable>\r\n                  </View>\r\n\r\n                \r\n            </View>\r\n            <View style={{flex:2,alignItems: \"center\",justifyContent: \"flex-start\",}}>\r\n                       \r\n                  <TouchableOpacity style={styles.loginBtn} onPress={onLoginClick}>\r\n                      <Text style={styles.loginText}>LOGIN</Text>\r\n                  </TouchableOpacity>\r\n                  </View>\r\n        </View>\r\n        </SomeComponent>}\r\n      </View>\r\n  );\r\n      }\r\n}\r\n \r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n formContainer:{\r\n    flex: 3,\r\n    backgroundColor: \"transparent\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    marginBottom:20\r\n },\r\n  inputView: {\r\n    backgroundColor: col.textColorSecondary,\r\n    borderRadius: 30,\r\n    width: 200,\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: \"center\",\r\n  },\r\n \r\n  TextInput: {\r\n    color: col.clrText,\r\n    fontFamily:\"Light\",\r\n    textAlign:\"center\",\r\n    height: 50,\r\n    flex: 1,\r\n  },\r\n \r\n  forgot_button: {\r\n    color: col.clrText,\r\n    fontFamily:\"Regular\",\r\n    height: 20,\r\n    marginBottom: 15,\r\n  },\r\n \r\n  loginBtn: {\r\n    width: 300,\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginTop: 40,\r\n    backgroundColor: col.secondaryColor,\r\n  },\r\n  loginText: {\r\n    color: col.clrText,\r\n    fontFamily:\"Bold\",\r\n  },\r\n  titleContainer:{\r\n    flex: 1.5,\r\n    backgroundColor: \"transparent\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  titleText:{\r\n    color: col.clrText,\r\n    fontFamily:\"Bold\",\r\n    fontSize:40,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { propertyReducer } = state\r\n  return { propertyReducer }\r\n};\r\nconst mapDispatchToProps = dispatch => (\r\n  bindActionCreators({\r\n    accTypeChange:accTypeChange\r\n  }, dispatch)\r\n);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CostumerLoginScreen);\r\n"]},"metadata":{},"sourceType":"module"}